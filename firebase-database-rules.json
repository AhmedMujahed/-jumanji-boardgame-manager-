{
  "rules": {
    ".read": "auth != null",
    ".write": "auth != null",
    
    "customers": {
      ".indexOn": ["name", "phone", "email", "createdAt"],
      "$customerId": {
        ".validate": "newData.hasChildren(['id', 'name', 'email', 'phone', 'totalSessions', 'totalSpent', 'createdAt'])"
      }
    },
    
    "sessions": {
      ".indexOn": ["customerId", "status", "startTime", "endTime", "gameMasterId", "tableId"],
      "$sessionId": {
        ".validate": "newData.hasChildren(['id', 'customerId', 'startTime', 'status', 'gameMasterId', 'tableId', 'tableNumber', 'capacity', 'createdAt'])"
      }
    },
    
    "tables": {
      ".indexOn": ["tableNumber", "status", "type"],
      "$tableId": {
        ".validate": "newData.hasChildren(['id', 'tableNumber', 'status', 'capacity', 'type', 'features', 'createdAt'])"
      }
    },
    
    "games": {
      ".indexOn": ["name", "category", "isAvailable"],
      "$gameId": {
        ".validate": "newData.hasChildren(['id', 'name', 'category', 'minPlayers', 'maxPlayers', 'duration', 'difficulty', 'isAvailable', 'createdAt'])"
      }
    },
    
    "payments": {
      ".indexOn": ["sessionId", "timestamp", "status"],
      "$paymentId": {
        ".validate": "newData.hasChildren(['id', 'sessionId', 'amount', 'method', 'status', 'timestamp'])"
      }
    },
    
    "promotions": {
      ".indexOn": ["isActive", "startDate", "endDate"],
      "$promotionId": {
        ".validate": "newData.hasChildren(['id', 'name', 'firstHourPrice', 'extraHourPrice', 'isActive', 'createdAt'])"
      }
    },
    
    "reservations": {
      ".indexOn": ["tableId", "customerId", "startTime", "status"],
      "$reservationId": {
        ".validate": "newData.hasChildren(['id', 'tableId', 'customerId', 'startTime', 'endTime', 'partySize', 'status', 'createdAt'])"
      }
    },
    
    "activityLogs": {
      ".indexOn": ["userId", "type", "timestamp"],
      "$logId": {
        ".validate": "newData.hasChildren(['id', 'type', 'userId', 'userName', 'userRole', 'action', 'details', 'timestamp'])"
      }
    },
    
    "users": {
      ".indexOn": ["username", "role"],
      "$userId": {
        ".validate": "newData.hasChildren(['id', 'username', 'role', 'createdAt'])"
      }
    },
    
    "broadcasts": {
      ".read": true,
      ".write": "auth != null",
      "$broadcastId": {
        ".validate": "newData.hasChildren(['eventType', 'data', 'timestamp'])"
      }
    },
    
    "analytics": {
      ".read": "auth != null && (auth.token.role == 'owner' || auth.token.role == 'admin')",
      ".write": "auth != null && (auth.token.role == 'owner' || auth.token.role == 'admin')"
    }
  }
}
